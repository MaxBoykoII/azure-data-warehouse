trigger: none

parameters:
  - name: isRelease
    displayName: 'Trigger a release to TEST'
    type: boolean
    default: 'false'

variables:
  deploymentLocation: 'eastus'
  azureResourceManagerConnection: 'az-dw-arm-sc'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isRelease: ${{ parameters.isRelease}}

resources:
  repositories:
    - repository: workspace_publish
      type: github
      endpoint: MaxBoykoII
      name: MaxBoykoII/azure-data-warehouse
      ref: workspace_publish

pool:
  vmImage: ubuntu-latest

stages:
  - stage: DEV_Deployment
    displayName: 'DEV: Deploy Resources and Artifacts'
    condition: and(eq(variables.isMain, 'true'), not(eq(variables.isRelease, 'true')))
    variables:
      resourcePrefix: 'azdwudacitydev'

    jobs:
      - deployment: Deploy_DEV_Environment
        displayName: 'DEV: Deploy resources'
        environment: 'Azure Data Warehouse - DEV'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: pipeline-templates/deploy-data-platform-resources.yml
                  parameters:
                    environmentName: 'DEV'
                    resourcePrefix: $(resourcePrefix)
                    deploymentLocation: $(deploymentLocation)
                    azureResourceManagerConnection: $(azureResourceManagerConnection)
                    adminGroupObjectId: $(SynapseAdminObjectId)
                    dbAdminPassword: $(DbAdminPassword)
                    integrateWithSourceControl: 'yes'

  - stage: DEV_Populate_Postgres
    displayName: 'DEV: Populate Postgres OLTP System'
    dependsOn: DEV_Deployment
    condition: and(succeeded(), eq(variables.isMain, 'true'), not(eq(variables.isRelease, 'true')))

    jobs:
      - job: populate_postgres
        displayName: 'Populate OLTP System'

        steps:
          - task: Bash@3
            displayName: 'DEV: Print environment variables'
            inputs:
              targetType: 'inline'
              script: 'env | sort'

          - task: CmdLine@2
            displayName: Install python script dependencies
            inputs:
              script: pip install -r requirements.txt
              workingDirectory: '$(System.DefaultWorkingDirectory)/scripts'

          - task: PythonScript@0
            displayName: 'DEV: Download and unzip data files'
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/extract.py'
              arguments: '$(ProjectFilesUrl)'

          - task: Bash@3
            displayName: 'DEV: List Contents of $(System.DefaultWorkingDirectory)'
            inputs:
              targetType: 'inline'
              script: 'ls -R $(System.DefaultWorkingDirectory)'

          - task: PythonScript@0
            displayName: 'DEV: Load project data into postgres'
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/load.py'
              arguments: 'azdwudacitydev-server.postgres.database.azure.com az_dw_admin $(DbAdminPassword)'


  - stage: TEST_Deployment
    displayName: 'TEST Deployment'
    condition: and(eq(variables.isMain, 'true'), eq(variables.isRelease, 'true'))
    variables:
      resourcePrefix: 'azdwudacitytest'

    jobs:
      - deployment: Deploy_TEST_Environment
        displayName: 'TEST: Deploy resources'
        environment: 'Azure Data Warehouse - TEST'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: pipeline-templates/deploy-data-platform-resources.yml
                  parameters:
                    environmentName: 'TEST'
                    resourcePrefix: $(resourcePrefix)
                    deploymentLocation: $(deploymentLocation)
                    azureResourceManagerConnection: $(azureResourceManagerConnection)
                    adminGroupObjectId: $(SynapseAdminObjectId)
                    dbAdminPassword: $(DbAdminPassword)
                    integrateWithSourceControl: 'no'

      - job: Deploy_TEST_Workspace
        dependsOn: 'Deploy_TEST_Environment'
        displayName: 'TEST: Deploy Workspace Artifacts'
        steps:
          - task: Bash@3
            displayName: 'TEST: Print environment variables'
            inputs:
              targetType: 'inline'
              script: 'env | sort'

          - checkout: workspace_publish

          - task: Bash@3
            displayName: 'TEST: List Contents of $(System.DefaultWorkingDirectory)'
            inputs:
              targetType: 'inline'
              script: 'ls -R $(System.DefaultWorkingDirectory)'

          - task: 'Synapse workspace deployment@1'
            inputs:
              TemplateFile: '$(System.DefaultWorkingDirectory)/azdwudacitydev/TemplateForWorkspace.json'
              ParametersFile: '$(System.DefaultWorkingDirectory)/azdwudacitydev/TemplateParametersForWorkspace.json'
              OverrideArmParameters: '-workspaceName $(resourcePrefix)'
              azureSubscription: 'az-dw-arm-sc'
              ResourceGroupName: '$(resourcePrefix)-rg'
              TargetWorkspaceName: '$(resourcePrefix)'
              DeleteArtifactsNotInTemplate: false
              Environment: 'prod' # Azure Cloud environment, NOT our PROD environment
